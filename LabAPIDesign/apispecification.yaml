openapi: 3.0.1
info:
  title: E-commerce API
  description: API para gestionar usuarios, pedidos y servicio al cliente en un sistema de comercio electrónico.
  version: 1.0.0
servers:
  - url: https://api.ecommerce.com/v1
    description: Servidor principal

paths:
  /users:
    post:
      summary: Crear un nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Usuario creado
        '400':
          description: Error de validación
  /users/{id}:
    get:
      summary: Obtener información de un usuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Información del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Usuario no encontrado
    put:
      summary: Actualizar información de un usuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuario actualizado
        '404':
          description: Usuario no encontrado
    delete:
      summary: Eliminar un usuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Usuario eliminado
        '404':
          description: Usuario no encontrado
  /orders:
    post:
      summary: Crear un nuevo pedido
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Pedido creado
        '400':
          description: Error de validación
    get:
      summary: Listar todos los pedidos
      parameters:
        - name: userId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Lista de pedidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  /orders/{id}:
    get:
      summary: Obtener detalles de un pedido
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Detalles del pedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Pedido no encontrado
  /tickets:
    post:
      summary: Crear un nuevo ticket de soporte
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '201':
          description: Ticket creado
        '400':
          description: Error de validación
    get:
      summary: Listar tickets de soporte
      responses:
        '200':
          description: Lista de tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
    Order:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        items:
          type: array
          items:
            type: string
        totalPrice:
          type: number
          format: float
    Ticket:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        issue:
          type: string
        status:
          type: string
          enum:
            - open
            - in_progress
            - closed
